{"version":3,"sources":["reportWebVitals.js","Components/Card.js","Components/Cardlist.js","Components/Searchbox.js","Components/Scroll.js","Containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","name","email","id","className","style","bordercolor","alt","src","Cardlist","robots","map","user","i","Searchbox","searchchange","type","placeholder","onChange","Scroll","overflowY","border","height","children","App","onsearchchange","event","setState","searchfield","target","value","state","fetch","Response","json","users","filteredrobots","this","filter","toLowerCase","includes","length","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mCCOCQ,EAbJ,SAACC,GAAS,IACVC,EAAiBD,EAAjBC,KAAMC,EAAWF,EAAXE,MAAOC,EAAIH,EAAJG,GAChB,OACI,sBAAKC,UAAU,uEAAuEC,MAAO,CAACC,YAAY,SAA1G,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,cACrB,gCACI,6BAAMF,IACN,kCAAKC,EAAL,cCaLO,EApBA,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACb,OACI,8BAEAA,EAAOC,KAAI,SAACC,EAAKC,GACjB,OACA,cAAC,EAAD,CAEIZ,KAAMS,EAAOG,GAAGZ,KAChBC,MAAOQ,EAAOG,GAAGX,MACjBC,GAAIO,EAAOG,GAAGV,IAHTU,SCOFC,EAbC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aACd,OACI,qBAAKX,UAAU,MAAf,SACI,uBACAY,KAAK,SACLZ,UAAU,sCACTa,YAAY,gBACZC,SAAUH,OCDRI,G,MAPF,SAACnB,GACV,OACI,qBAAKK,MAAO,CAACe,UAAU,SAAUC,OAAO,kBAAmBC,OAAO,SAAlE,SACKtB,EAAMuB,aCgDJC,E,kDA7CX,aAAc,IAAD,8BACT,gBAYJC,eAAe,SAACC,GACZ,EAAKC,SAAS,CAACC,YAAYF,EAAMG,OAAOC,SAZxC,EAAKC,MAAM,CACPrB,OAAO,GACPkB,YAAY,IAJP,E,gEAOO,IAAD,OACfI,MAAM,8CACLvC,MAAK,SAAAwC,GAAW,OAAOA,EAASC,UAEhCzC,MAAK,SAAA0C,GAAK,OAAE,EAAKR,SAAS,CAACjB,OAAOyB,S,+BAQ9B,IAAD,OACEC,EAAeC,KAAKN,MAAMrB,OAAO4B,QAAO,SAAA5B,GAC1C,OAAOA,EAAOT,KAAKsC,cAAcC,SAAS,EAAKT,MAAMH,YAAYW,kBAIrE,OAA+B,IAA3BF,KAAKN,MAAMrB,OAAO+B,OACX,4CAIH,sBAAKrC,UAAU,KAAf,UACI,oBAAIA,UAAU,QAAd,4BACA,cAAC,EAAD,CAAWW,aAAcsB,KAAKZ,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUf,OAAQ0B,a,GAnCpBM,aCElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAEAC,SAASC,eAAe,SAM1BzD,M","file":"static/js/main.37cbb0c2.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from'react';\r\nconst Card=(props)=>{\r\n    const {name, email, id}=props;\r\n        return (\r\n            <div className='ba  b--mid-gray tc dib bg-darkest-blue br3 pa3 ma2 grow bw2 shadow-5' style={{bordercolor:\"white\"}}>\r\n                <img alt='robots' src={`https://robohash.org/${id}?200x200`}/>\r\n                <div >\r\n                    <h2 >{name}</h2>\r\n                    <p> {email} </p>       \r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\nexport default Card;","import Card from './Card';\r\nconst Cardlist=({robots})=>{\r\n    return(\r\n        <div>\r\n        {\r\n        robots.map((user,i) => {\r\n        return( \r\n        <Card \r\n            key={i} \r\n            name={robots[i].name}\r\n            email={robots[i].email}\r\n            id={robots[i].id}\r\n        />\r\n        \r\n        );})\r\n         } \r\n        </div> \r\n    \r\n    );\r\n        \r\n}\r\nexport default Cardlist;","import React from 'react';\r\nimport 'tachyons';\r\nconst Searchbox=({searchchange})=>{\r\n    return(\r\n        <div className=\"pa2\">\r\n            <input \r\n            type='search'  \r\n            className=\"tc pa3 ba b--green bg-lightest-blue\"\r\n             placeholder=\"Search Robots\"\r\n             onChange={searchchange}\r\n             />\r\n            \r\n        </div>\r\n    );\r\n}\r\nexport default Searchbox;\r\n","import react from 'react';\r\nconst Scroll=(props)=>{\r\n    return(\r\n        <div style={{overflowY:'scroll', border:'1px solid white', height:'500px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\nexport default Scroll;","import React,{Component} from'react';\r\nimport Cardlist from '../Components/Cardlist';\r\nimport Searchbox from '../Components/Searchbox';\r\nimport './App.css';\r\nimport Scroll from '../Components/Scroll';\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            robots:[],\r\n            searchfield:''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(Response=>{return Response.json();})\r\n        // .then(response=>response.json())\r\n        .then(users=>this.setState({robots:users}))\r\n    }\r\n    onsearchchange=(event)=>{\r\n        this.setState({searchfield:event.target.value})\r\n        \r\n    \r\n    }\r\n\r\n    render(){\r\n        const filteredrobots=this.state.robots.filter(robots=>{\r\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n        }\r\n\r\n        )\r\n        if (this.state.robots.length===0){\r\n            return <h1>Loading...</h1>\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"tc\">\r\n                    <h1 className=\"tc f1\">RoboFriends!!!</h1>\r\n                    <Searchbox searchchange={this.onsearchchange} />\r\n                    <Scroll>\r\n                    <Cardlist robots={filteredrobots}/>\r\n                    </Scroll>\r\n                    \r\n                </div>\r\n            );\r\n        }\r\n        \r\n\r\n        }\r\n    \r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './Containers/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}